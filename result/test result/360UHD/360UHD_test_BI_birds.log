Namespace(cuda=True, file_list='test.txt', frame=1, gpus=2, image_out='./out/', layer=15, other_dataset=False, pretrain='./result/weight/2022-05-31-17-40/STIFS_3_localX4_15L_64_epoch_145.pth', save_test_log='./log/test', scale=4, seed=0, select=0, test_dir='/home/aagraharibaniya/360VSR/360Videos/HQ_Test_Frames/', testbatchsize=1, threads=32, vid='Birds-Scene-001_frames', window=3)
ResConvo(
  (neuro): neuro(
    (feats): Feat_Extract(
      (conv_iden1): Conv2d(3, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv_iden2): Conv2d(3, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv_iden3): Conv2d(3, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_f1): Conv2d(3, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_f1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_f2): Conv2d(3, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_f2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_f3): Conv2d(3, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_f3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (feat_set1): Conv2d(256, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (feat_set2): Conv2d(256, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv_sa): Conv2d(256, 128, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
      (lrelu): LeakyReLU(negative_slope=0.1, inplace=True)
      (sigmoid): Sigmoid()
      (conv_ca_avg1): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (conv_ca_avg2): Conv2d(32, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (conv_ca_max1): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (conv_ca_max2): Conv2d(32, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (conv_cat): Conv2d(179, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (recon_trunk1): ResidualBlock_noBN(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (recon_trunk2): ResidualBlock_noBN(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (recon_trunk3): ResidualBlock_noBN(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (recon_trunk4): ResidualBlock_noBN(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (recon_trunk5): ResidualBlock_noBN(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (recon_trunk6): ResidualBlock_noBN(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (recon_trunk7): ResidualBlock_noBN(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (recon_trunk8): ResidualBlock_noBN(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (recon_trunk9): ResidualBlock_noBN(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (recon_trunk10): ResidualBlock_noBN(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (conv_res1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv_res2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv_loc1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv_loc2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (upconv1): Conv2d(128, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (upconv2): Conv2d(128, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (conv_last1): Conv2d(6, 6, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (conv_last2): Conv2d(6, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (down): PixelUnShuffle(upscale_factor=4)
)
Model size: 8.89168M
===> 10L model has been initialized
===> load pretrained model
===> pretrained model is load
===> Loading test Datasets
===> DataLoading Finished
torch.Size([1, 3, 512, 1024])
torch.Size([1, 3, 512, 1024])
torch.Size([1, 3, 512, 1024])
torch.Size([1, 3, 512, 1024])
torch.Size([1, 3, 512, 1024])
torch.Size([1, 3, 512, 1024])
torch.Size([1, 3, 512, 1024])
torch.Size([1, 3, 512, 1024])
torch.Size([1, 3, 512, 1024])
torch.Size([1, 3, 512, 1024])
torch.Size([1, 3, 512, 1024])
torch.Size([1, 3, 512, 1024])
torch.Size([1, 3, 512, 1024])
torch.Size([1, 3, 512, 1024])
torch.Size([1, 3, 512, 1024])
torch.Size([1, 3, 512, 1024])
torch.Size([1, 3, 512, 1024])
torch.Size([1, 3, 512, 1024])
torch.Size([1, 3, 512, 1024])
torch.Size([1, 3, 512, 1024])
===> Timer: 4.4305 sec.
PSNR: 26.178898 dB, 	SSIM: 0.760145, 	WS-PSNR: 25.810526, 	WS-SSIM: 0.737877
PSNR: 26.194798 dB, 	SSIM: 0.761281, 	WS-PSNR: 25.811800, 	WS-SSIM: 0.738731
PSNR: 26.204520 dB, 	SSIM: 0.761554, 	WS-PSNR: 25.815687, 	WS-SSIM: 0.738885
PSNR: 26.202140 dB, 	SSIM: 0.761434, 	WS-PSNR: 25.812182, 	WS-SSIM: 0.738722
PSNR: 26.190332 dB, 	SSIM: 0.761076, 	WS-PSNR: 25.799851, 	WS-SSIM: 0.738276
PSNR: 26.184942 dB, 	SSIM: 0.761070, 	WS-PSNR: 25.796423, 	WS-SSIM: 0.738370
PSNR: 26.175821 dB, 	SSIM: 0.760869, 	WS-PSNR: 25.787976, 	WS-SSIM: 0.738169
PSNR: 26.165657 dB, 	SSIM: 0.760555, 	WS-PSNR: 25.777982, 	WS-SSIM: 0.737830
PSNR: 26.153709 dB, 	SSIM: 0.760120, 	WS-PSNR: 25.765121, 	WS-SSIM: 0.737294
PSNR: 26.166307 dB, 	SSIM: 0.761001, 	WS-PSNR: 25.783243, 	WS-SSIM: 0.738552
PSNR: 26.169340 dB, 	SSIM: 0.761218, 	WS-PSNR: 25.789133, 	WS-SSIM: 0.738890
PSNR: 26.166157 dB, 	SSIM: 0.760970, 	WS-PSNR: 25.787365, 	WS-SSIM: 0.738659
PSNR: 26.154863 dB, 	SSIM: 0.760154, 	WS-PSNR: 25.774800, 	WS-SSIM: 0.737619
PSNR: 26.154610 dB, 	SSIM: 0.760304, 	WS-PSNR: 25.776018, 	WS-SSIM: 0.737869
PSNR: 26.153036 dB, 	SSIM: 0.760312, 	WS-PSNR: 25.775147, 	WS-SSIM: 0.737901
PSNR: 26.150983 dB, 	SSIM: 0.760227, 	WS-PSNR: 25.773339, 	WS-SSIM: 0.737805
PSNR: 26.146688 dB, 	SSIM: 0.759990, 	WS-PSNR: 25.768686, 	WS-SSIM: 0.737496
PSNR: 26.147389 dB, 	SSIM: 0.760100, 	WS-PSNR: 25.770094, 	WS-SSIM: 0.737661
PSNR: 26.146959 dB, 	SSIM: 0.760127, 	WS-PSNR: 25.769925, 	WS-SSIM: 0.737704
PSNR: 26.146157 dB, 	SSIM: 0.760118, 	WS-PSNR: 25.769231, 	WS-SSIM: 0.737704
===>Birds-Scene-001_frames PSNR = 26.167665271927923
===>Birds-Scene-001_frames SSIM = 0.7606311762945869
===>Birds-Scene-001_frames WS-PSNR = 25.78572644592676
===>Birds-Scene-001_frames WS-SSIM = 0.7381007826756874
===>Birds-Scene-001_frames LPISP = 0.0
==> Average PSNR = 26.167665
==> Average SSIM = 0.760631
==> Average WS-PSNR = 25.785726
==> Average WS-SSIM = 0.738101
==> Average LPIPS = 0.000000
