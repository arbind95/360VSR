Namespace(cuda=True, file_list='test.txt', frame=1, gpus=2, image_out='./out/', layer=15, other_dataset=False, pretrain='./result/weight/2022-05-31-17-40/STIFS_3_localX4_15L_64_epoch_145.pth', save_test_log='./log/test', scale=4, seed=0, select=0, test_dir='/home/aagraharibaniya/360VSR/360Videos/HQ_Test_Frames/', testbatchsize=1, threads=32, vid='2016BelmontChristmasParade360videoRideAlong!Part1-Scene-002_frames', window=3)
ResConvo(
  (neuro): neuro(
    (feats): Feat_Extract(
      (conv_iden1): Conv2d(3, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv_iden2): Conv2d(3, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv_iden3): Conv2d(3, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_f1): Conv2d(3, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_f1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_f2): Conv2d(3, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_f2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_f3): Conv2d(3, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_f3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (feat_set1): Conv2d(256, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (feat_set2): Conv2d(256, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv_sa): Conv2d(256, 128, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
      (lrelu): LeakyReLU(negative_slope=0.1, inplace=True)
      (sigmoid): Sigmoid()
      (conv_ca_avg1): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (conv_ca_avg2): Conv2d(32, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (conv_ca_max1): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (conv_ca_max2): Conv2d(32, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (conv_cat): Conv2d(179, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (recon_trunk1): ResidualBlock_noBN(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (recon_trunk2): ResidualBlock_noBN(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (recon_trunk3): ResidualBlock_noBN(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (recon_trunk4): ResidualBlock_noBN(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (recon_trunk5): ResidualBlock_noBN(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (recon_trunk6): ResidualBlock_noBN(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (recon_trunk7): ResidualBlock_noBN(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (recon_trunk8): ResidualBlock_noBN(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (recon_trunk9): ResidualBlock_noBN(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (recon_trunk10): ResidualBlock_noBN(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (conv_res1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv_res2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv_loc1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv_loc2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (upconv1): Conv2d(128, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (upconv2): Conv2d(128, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (conv_last1): Conv2d(6, 6, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (conv_last2): Conv2d(6, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (down): PixelUnShuffle(upscale_factor=4)
)
Model size: 8.89168M
===> 10L model has been initialized
===> load pretrained model
===> pretrained model is load
===> Loading test Datasets
===> DataLoading Finished
torch.Size([1, 3, 180, 320])
torch.Size([1, 3, 180, 320])
torch.Size([1, 3, 180, 320])
torch.Size([1, 3, 180, 320])
torch.Size([1, 3, 180, 320])
torch.Size([1, 3, 180, 320])
torch.Size([1, 3, 180, 320])
torch.Size([1, 3, 180, 320])
torch.Size([1, 3, 180, 320])
torch.Size([1, 3, 180, 320])
torch.Size([1, 3, 180, 320])
torch.Size([1, 3, 180, 320])
torch.Size([1, 3, 180, 320])
torch.Size([1, 3, 180, 320])
torch.Size([1, 3, 180, 320])
torch.Size([1, 3, 180, 320])
torch.Size([1, 3, 180, 320])
torch.Size([1, 3, 180, 320])
torch.Size([1, 3, 180, 320])
torch.Size([1, 3, 180, 320])
===> Timer: 0.6115 sec.
PSNR: 24.550868 dB, 	SSIM: 0.849680, 	WS-PSNR: 24.028240, 	WS-SSIM: 0.835352
PSNR: 24.618302 dB, 	SSIM: 0.852250, 	WS-PSNR: 24.093686, 	WS-SSIM: 0.837968
PSNR: 24.653485 dB, 	SSIM: 0.853503, 	WS-PSNR: 24.129993, 	WS-SSIM: 0.839527
PSNR: 24.664823 dB, 	SSIM: 0.853836, 	WS-PSNR: 24.140269, 	WS-SSIM: 0.839849
PSNR: 24.677075 dB, 	SSIM: 0.854732, 	WS-PSNR: 24.149634, 	WS-SSIM: 0.840598
PSNR: 24.662322 dB, 	SSIM: 0.854539, 	WS-PSNR: 24.134790, 	WS-SSIM: 0.840227
PSNR: 24.659128 dB, 	SSIM: 0.854610, 	WS-PSNR: 24.130529, 	WS-SSIM: 0.840295
PSNR: 24.664551 dB, 	SSIM: 0.855047, 	WS-PSNR: 24.134963, 	WS-SSIM: 0.840820
PSNR: 24.651179 dB, 	SSIM: 0.855058, 	WS-PSNR: 24.122195, 	WS-SSIM: 0.840825
PSNR: 24.638200 dB, 	SSIM: 0.854859, 	WS-PSNR: 24.110362, 	WS-SSIM: 0.840662
PSNR: 24.624954 dB, 	SSIM: 0.854567, 	WS-PSNR: 24.098499, 	WS-SSIM: 0.840297
PSNR: 24.616216 dB, 	SSIM: 0.854508, 	WS-PSNR: 24.088927, 	WS-SSIM: 0.840185
PSNR: 24.618594 dB, 	SSIM: 0.854774, 	WS-PSNR: 24.091482, 	WS-SSIM: 0.840483
PSNR: 24.617034 dB, 	SSIM: 0.854805, 	WS-PSNR: 24.091849, 	WS-SSIM: 0.840602
PSNR: 24.601356 dB, 	SSIM: 0.854374, 	WS-PSNR: 24.075958, 	WS-SSIM: 0.840046
PSNR: 24.593334 dB, 	SSIM: 0.854117, 	WS-PSNR: 24.068884, 	WS-SSIM: 0.839808
PSNR: 24.595677 dB, 	SSIM: 0.854319, 	WS-PSNR: 24.071246, 	WS-SSIM: 0.840082
PSNR: 24.593636 dB, 	SSIM: 0.854250, 	WS-PSNR: 24.068588, 	WS-SSIM: 0.840003
PSNR: 24.590025 dB, 	SSIM: 0.854198, 	WS-PSNR: 24.064333, 	WS-SSIM: 0.839904
PSNR: 24.577632 dB, 	SSIM: 0.853829, 	WS-PSNR: 24.052894, 	WS-SSIM: 0.839471
===>2016BelmontChristmasParade360videoRideAlong!Part1-Scene-002_frames PSNR = 24.62341959747948
===>2016BelmontChristmasParade360videoRideAlong!Part1-Scene-002_frames SSIM = 0.8540928627552974
===>2016BelmontChristmasParade360videoRideAlong!Part1-Scene-002_frames WS-PSNR = 24.097366074662908
===>2016BelmontChristmasParade360videoRideAlong!Part1-Scene-002_frames WS-SSIM = 0.8398502427775847
===>2016BelmontChristmasParade360videoRideAlong!Part1-Scene-002_frames LPISP = 0.0
==> Average PSNR = 24.623420
==> Average SSIM = 0.854093
==> Average WS-PSNR = 24.097366
==> Average WS-SSIM = 0.839850
==> Average LPIPS = 0.000000
