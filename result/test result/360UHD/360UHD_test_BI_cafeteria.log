Namespace(cuda=True, file_list='test.txt', frame=1, gpus=2, image_out='./out/', layer=15, other_dataset=False, pretrain='./result/weight/2022-05-31-17-40/STIFS_3_localX4_15L_64_epoch_145.pth', save_test_log='./log/test', scale=4, seed=0, select=0, test_dir='/home/aagraharibaniya/360VSR/360Videos/HQ_Test_Frames/', testbatchsize=1, threads=32, vid='Cafeteria-Scene-001_frames', window=3)
ResConvo(
  (neuro): neuro(
    (feats): Feat_Extract(
      (conv_iden1): Conv2d(3, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv_iden2): Conv2d(3, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv_iden3): Conv2d(3, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_f1): Conv2d(3, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_f1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_f2): Conv2d(3, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_f2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_f3): Conv2d(3, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_f3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (feat_set1): Conv2d(256, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (feat_set2): Conv2d(256, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv_sa): Conv2d(256, 128, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
      (lrelu): LeakyReLU(negative_slope=0.1, inplace=True)
      (sigmoid): Sigmoid()
      (conv_ca_avg1): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (conv_ca_avg2): Conv2d(32, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (conv_ca_max1): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (conv_ca_max2): Conv2d(32, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (conv_cat): Conv2d(179, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (recon_trunk1): ResidualBlock_noBN(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (recon_trunk2): ResidualBlock_noBN(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (recon_trunk3): ResidualBlock_noBN(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (recon_trunk4): ResidualBlock_noBN(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (recon_trunk5): ResidualBlock_noBN(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (recon_trunk6): ResidualBlock_noBN(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (recon_trunk7): ResidualBlock_noBN(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (recon_trunk8): ResidualBlock_noBN(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (recon_trunk9): ResidualBlock_noBN(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (recon_trunk10): ResidualBlock_noBN(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (conv_res1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv_res2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv_loc1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv_loc2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (upconv1): Conv2d(128, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (upconv2): Conv2d(128, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (conv_last1): Conv2d(6, 6, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (conv_last2): Conv2d(6, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (down): PixelUnShuffle(upscale_factor=4)
)
Model size: 8.89168M
===> 10L model has been initialized
===> load pretrained model
===> pretrained model is load
===> Loading test Datasets
===> DataLoading Finished
torch.Size([1, 3, 320, 640])
torch.Size([1, 3, 320, 640])
torch.Size([1, 3, 320, 640])
torch.Size([1, 3, 320, 640])
torch.Size([1, 3, 320, 640])
torch.Size([1, 3, 320, 640])
torch.Size([1, 3, 320, 640])
torch.Size([1, 3, 320, 640])
torch.Size([1, 3, 320, 640])
torch.Size([1, 3, 320, 640])
torch.Size([1, 3, 320, 640])
torch.Size([1, 3, 320, 640])
torch.Size([1, 3, 320, 640])
torch.Size([1, 3, 320, 640])
torch.Size([1, 3, 320, 640])
torch.Size([1, 3, 320, 640])
torch.Size([1, 3, 320, 640])
torch.Size([1, 3, 320, 640])
torch.Size([1, 3, 320, 640])
torch.Size([1, 3, 320, 640])
===> Timer: 1.8415 sec.
PSNR: 36.866508 dB, 	SSIM: 0.975789, 	WS-PSNR: 35.179135, 	WS-SSIM: 0.969658
PSNR: 37.068983 dB, 	SSIM: 0.977400, 	WS-PSNR: 35.359371, 	WS-SSIM: 0.971301
PSNR: 37.020648 dB, 	SSIM: 0.977148, 	WS-PSNR: 35.304837, 	WS-SSIM: 0.970900
PSNR: 37.147692 dB, 	SSIM: 0.977770, 	WS-PSNR: 35.430382, 	WS-SSIM: 0.971705
PSNR: 37.191189 dB, 	SSIM: 0.977902, 	WS-PSNR: 35.475616, 	WS-SSIM: 0.971903
PSNR: 37.083378 dB, 	SSIM: 0.977232, 	WS-PSNR: 35.368640, 	WS-SSIM: 0.971070
PSNR: 37.222741 dB, 	SSIM: 0.977998, 	WS-PSNR: 35.504269, 	WS-SSIM: 0.971993
PSNR: 37.179082 dB, 	SSIM: 0.977842, 	WS-PSNR: 35.461084, 	WS-SSIM: 0.971821
PSNR: 37.208600 dB, 	SSIM: 0.977932, 	WS-PSNR: 35.492214, 	WS-SSIM: 0.972032
PSNR: 37.058091 dB, 	SSIM: 0.977081, 	WS-PSNR: 35.344625, 	WS-SSIM: 0.971006
PSNR: 37.139543 dB, 	SSIM: 0.977628, 	WS-PSNR: 35.421548, 	WS-SSIM: 0.971662
PSNR: 37.156147 dB, 	SSIM: 0.977792, 	WS-PSNR: 35.435955, 	WS-SSIM: 0.971845
PSNR: 37.063218 dB, 	SSIM: 0.977167, 	WS-PSNR: 35.346510, 	WS-SSIM: 0.971112
PSNR: 37.223877 dB, 	SSIM: 0.977961, 	WS-PSNR: 35.506517, 	WS-SSIM: 0.972075
PSNR: 37.186420 dB, 	SSIM: 0.977827, 	WS-PSNR: 35.467376, 	WS-SSIM: 0.971876
PSNR: 37.202557 dB, 	SSIM: 0.977908, 	WS-PSNR: 35.483597, 	WS-SSIM: 0.971981
PSNR: 37.084980 dB, 	SSIM: 0.977270, 	WS-PSNR: 35.366890, 	WS-SSIM: 0.971143
PSNR: 37.173068 dB, 	SSIM: 0.977936, 	WS-PSNR: 35.449350, 	WS-SSIM: 0.971898
PSNR: 37.096170 dB, 	SSIM: 0.977371, 	WS-PSNR: 35.375075, 	WS-SSIM: 0.971225
PSNR: 37.219285 dB, 	SSIM: 0.978092, 	WS-PSNR: 35.496166, 	WS-SSIM: 0.972107
===>Cafeteria-Scene-001_frames PSNR = 37.12960880550157
===>Cafeteria-Scene-001_frames SSIM = 0.9775522059541926
===>Cafeteria-Scene-001_frames WS-PSNR = 35.413457842270724
===>Cafeteria-Scene-001_frames WS-SSIM = 0.9715157163892284
===>Cafeteria-Scene-001_frames LPISP = 0.0
==> Average PSNR = 37.129609
==> Average SSIM = 0.977552
==> Average WS-PSNR = 35.413458
==> Average WS-SSIM = 0.971516
==> Average LPIPS = 0.000000
