Namespace(cuda=True, file_list='test.txt', frame=1, gpus=2, image_out='./out/', layer=15, other_dataset=False, pretrain='./result/weight/2022-05-31-17-40/STIFS_3_localX4_15L_64_epoch_145.pth', save_test_log='./log/test', scale=4, seed=0, select=0, test_dir='/home/aagraharibaniya/360VSR/360Videos/HQ_Test_Frames/', testbatchsize=1, threads=32, vid='360degreevideocrosscountryskiing-Scene-003_frames', window=3)
ResConvo(
  (neuro): neuro(
    (feats): Feat_Extract(
      (conv_iden1): Conv2d(3, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv_iden2): Conv2d(3, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv_iden3): Conv2d(3, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_f1): Conv2d(3, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_f1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_f2): Conv2d(3, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_f2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_f3): Conv2d(3, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_f3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (feat_set1): Conv2d(256, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (feat_set2): Conv2d(256, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv_sa): Conv2d(256, 128, kernel_size=(7, 7), stride=(1, 1), padding=(3, 3), bias=False)
      (lrelu): LeakyReLU(negative_slope=0.1, inplace=True)
      (sigmoid): Sigmoid()
      (conv_ca_avg1): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (conv_ca_avg2): Conv2d(32, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (conv_ca_max1): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      (conv_ca_max2): Conv2d(32, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    )
    (conv_cat): Conv2d(179, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (recon_trunk1): ResidualBlock_noBN(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (recon_trunk2): ResidualBlock_noBN(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (recon_trunk3): ResidualBlock_noBN(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (recon_trunk4): ResidualBlock_noBN(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (recon_trunk5): ResidualBlock_noBN(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (recon_trunk6): ResidualBlock_noBN(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (recon_trunk7): ResidualBlock_noBN(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (recon_trunk8): ResidualBlock_noBN(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (recon_trunk9): ResidualBlock_noBN(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (recon_trunk10): ResidualBlock_noBN(
      (conv1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv1_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (conv2_l): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (conv_res1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv_res2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv_loc1): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv_loc2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (upconv1): Conv2d(128, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (upconv2): Conv2d(128, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (conv_last1): Conv2d(6, 6, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (conv_last2): Conv2d(6, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (down): PixelUnShuffle(upscale_factor=4)
)
Model size: 8.89168M
===> 10L model has been initialized
===> load pretrained model
===> pretrained model is load
===> Loading test Datasets
===> DataLoading Finished
torch.Size([1, 3, 180, 320])
torch.Size([1, 3, 180, 320])
torch.Size([1, 3, 180, 320])
torch.Size([1, 3, 180, 320])
torch.Size([1, 3, 180, 320])
torch.Size([1, 3, 180, 320])
torch.Size([1, 3, 180, 320])
torch.Size([1, 3, 180, 320])
torch.Size([1, 3, 180, 320])
torch.Size([1, 3, 180, 320])
torch.Size([1, 3, 180, 320])
torch.Size([1, 3, 180, 320])
torch.Size([1, 3, 180, 320])
torch.Size([1, 3, 180, 320])
torch.Size([1, 3, 180, 320])
torch.Size([1, 3, 180, 320])
torch.Size([1, 3, 180, 320])
torch.Size([1, 3, 180, 320])
torch.Size([1, 3, 180, 320])
torch.Size([1, 3, 180, 320])
===> Timer: 0.6125 sec.
PSNR: 32.805108 dB, 	SSIM: 0.916921, 	WS-PSNR: 31.677096, 	WS-SSIM: 0.913264
PSNR: 32.971382 dB, 	SSIM: 0.919910, 	WS-PSNR: 31.812516, 	WS-SSIM: 0.916233
PSNR: 32.955461 dB, 	SSIM: 0.919208, 	WS-PSNR: 31.798691, 	WS-SSIM: 0.915636
PSNR: 32.990851 dB, 	SSIM: 0.920309, 	WS-PSNR: 31.821771, 	WS-SSIM: 0.916501
PSNR: 32.980216 dB, 	SSIM: 0.920380, 	WS-PSNR: 31.812167, 	WS-SSIM: 0.916665
PSNR: 32.978159 dB, 	SSIM: 0.920438, 	WS-PSNR: 31.810141, 	WS-SSIM: 0.916657
PSNR: 32.921473 dB, 	SSIM: 0.919351, 	WS-PSNR: 31.747605, 	WS-SSIM: 0.915442
PSNR: 32.891398 dB, 	SSIM: 0.919235, 	WS-PSNR: 31.721759, 	WS-SSIM: 0.915190
PSNR: 32.874955 dB, 	SSIM: 0.918677, 	WS-PSNR: 31.712850, 	WS-SSIM: 0.914830
PSNR: 32.823518 dB, 	SSIM: 0.918810, 	WS-PSNR: 31.647723, 	WS-SSIM: 0.914750
PSNR: 32.844199 dB, 	SSIM: 0.919509, 	WS-PSNR: 31.662262, 	WS-SSIM: 0.915205
PSNR: 32.865278 dB, 	SSIM: 0.920043, 	WS-PSNR: 31.673320, 	WS-SSIM: 0.915621
PSNR: 32.782988 dB, 	SSIM: 0.918890, 	WS-PSNR: 31.590440, 	WS-SSIM: 0.914551
PSNR: 32.796655 dB, 	SSIM: 0.918669, 	WS-PSNR: 31.607668, 	WS-SSIM: 0.914395
PSNR: 32.828527 dB, 	SSIM: 0.919931, 	WS-PSNR: 31.626439, 	WS-SSIM: 0.915255
PSNR: 32.825974 dB, 	SSIM: 0.920074, 	WS-PSNR: 31.621454, 	WS-SSIM: 0.915286
PSNR: 32.804036 dB, 	SSIM: 0.919442, 	WS-PSNR: 31.599059, 	WS-SSIM: 0.914746
PSNR: 32.767723 dB, 	SSIM: 0.919234, 	WS-PSNR: 31.567165, 	WS-SSIM: 0.914910
PSNR: 32.714015 dB, 	SSIM: 0.918112, 	WS-PSNR: 31.516965, 	WS-SSIM: 0.913945
PSNR: 32.688908 dB, 	SSIM: 0.917893, 	WS-PSNR: 31.488704, 	WS-SSIM: 0.913618
===>360degreevideocrosscountryskiing-Scene-003_frames PSNR = 32.855541254355515
===>360degreevideocrosscountryskiing-Scene-003_frames SSIM = 0.9192518445795839
===>360degreevideocrosscountryskiing-Scene-003_frames WS-PSNR = 31.67578978434046
===>360degreevideocrosscountryskiing-Scene-003_frames WS-SSIM = 0.9151349221930758
===>360degreevideocrosscountryskiing-Scene-003_frames LPISP = 0.0
==> Average PSNR = 32.855541
==> Average SSIM = 0.919252
==> Average WS-PSNR = 31.675790
==> Average WS-SSIM = 0.915135
==> Average LPIPS = 0.000000
